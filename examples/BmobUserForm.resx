<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        KAAAAABJRU5ErkJggg==
</value>
  </data>
</root>